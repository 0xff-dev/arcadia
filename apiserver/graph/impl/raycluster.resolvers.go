package impl

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"

	"github.com/kubeagi/arcadia/apiserver/graph/generated"
	"github.com/kubeagi/arcadia/apiserver/pkg/client"
	"github.com/kubeagi/arcadia/apiserver/pkg/ray"
)

// RayCluster is the resolver for the RayCluster field.
func (r *queryResolver) RayCluster(ctx context.Context) (*generated.RayClusterQuery, error) {
	return &generated.RayClusterQuery{}, nil
}

// ListWorkers is the resolver for the listWorkers field.
func (r *rayClusterQueryResolver) ListRayClusters(ctx context.Context, obj *generated.RayClusterQuery, input generated.ListCommonInput) (*generated.PaginatedResult, error) {
	systemClient, err := client.GetClient(nil)
	if err != nil {
		return nil, err
	}

	return ray.ListRayClusters(ctx, systemClient, input)
}

// RayClusterQuery returns generated.RayClusterQueryResolver implementation.
func (r *Resolver) RayClusterQuery() generated.RayClusterQueryResolver {
	return &rayClusterQueryResolver{r}
}

type rayClusterQueryResolver struct{ *Resolver }
