{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/": {
            "post": {
                "description": "chat with application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "chat with application",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Should the chat request be treated as debugging?",
                        "name": "debug",
                        "in": "query"
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.ChatReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "blocking mode, will return all field; streaming mode, only conversation_id, message and created_at will be returned",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatRespBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/conversations": {
            "post": {
                "description": "list all conversations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "list all conversations",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.APPMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Conversation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/conversations/:conversationID": {
            "delete": {
                "description": "delete one conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "delete one conversation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "conversationID",
                        "name": "conversationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.SimpleResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/messages": {
            "post": {
                "description": "get all messages history for one conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get all messages history for one conversation",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.ConversationReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.Conversation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/messages/:messageID/references": {
            "post": {
                "description": "get one message's references",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get one message references",
                "parameters": [
                    {
                        "type": "string",
                        "description": "messageID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.MessageReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/retriever.Reference"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/model/files": {
            "delete": {
                "description": "Delete files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Delete files",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.DelteFileBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/model/files/chunk_url": {
            "post": {
                "description": "Get multipart upload URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Get multipart upload URL",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.GenChunkURLBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.GenChunkURLResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/model/files/chunks": {
            "get": {
                "description": "Get success chunks of a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Get success chunks of a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MD5 value of the file",
                        "name": "md5",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ETag of the file",
                        "name": "etag",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SuccessChunksResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Complete multipart upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Complete multipart upload",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CompleteBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create new multipart upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "create new multipart upload",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.NewMultipartBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/model/files/chunks/abort": {
            "put": {
                "description": "Abort a file upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Abort a file upload",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CompleteBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/model/files/download": {
            "get": {
                "description": "Download files in chunks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Download files in chunks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The start of the file",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The end of the file",
                        "name": "end",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/model/files/downloadlink": {
            "get": {
                "description": "Get a download link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Get a download link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/model/files/stat": {
            "get": {
                "description": "Statistics file information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Statistics file information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/versioneddataset/files/csv": {
            "get": {
                "description": "Read a file line by line",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Read a file line by line",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Start page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of rows read each time",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ReadCSVResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chat.APPMetadata": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "arcadia"
                }
            }
        },
        "chat.ChatReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace",
                "query",
                "response_mode"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "arcadia"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "query": {
                    "description": "Query user query string",
                    "type": "string",
                    "example": "旷工最小计算单位为多少天？"
                },
                "response_mode": {
                    "description": "ResponseMode:\n* Blocking - means the response is returned in a blocking manner\n* Streaming - means the response will use Server-Sent Events",
                    "allOf": [
                        {
                            "$ref": "#/definitions/chat.ResponseMode"
                        }
                    ],
                    "example": "blocking"
                }
            }
        },
        "chat.ChatRespBody": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "created_at": {
                    "description": "CreatedAt is the time when the message is created",
                    "type": "string",
                    "example": "2023-12-21T10:21:06.389359092+08:00"
                },
                "message": {
                    "description": "Message is what AI say",
                    "type": "string",
                    "example": "旷工最小计算单位为0.5天。"
                },
                "message_id": {
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                },
                "references": {
                    "description": "References is the list of references",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/retriever.Reference"
                    }
                }
            }
        },
        "chat.ConversationReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "arcadia"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                }
            }
        },
        "chat.ErrorResp": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "conversation is not found"
                }
            }
        },
        "chat.MessageReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "arcadia"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "message_id": {
                    "description": "MessageID, single message id",
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                }
            }
        },
        "chat.ResponseMode": {
            "type": "string",
            "enum": [
                "blocking",
                "streaming"
            ],
            "x-enum-varnames": [
                "Blocking",
                "Streaming"
            ]
        },
        "chat.SimpleResp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "common.ReadCSVResult": {
            "type": "object",
            "properties": {
                "rows": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "retriever.Reference": {
            "type": "object",
            "properties": {
                "answer": {
                    "description": "Answer row",
                    "type": "string",
                    "example": "旷工最小计算单位为 0.5 天。"
                },
                "content": {
                    "description": "related content in the source file or in webpage",
                    "type": "string",
                    "example": "旷工最小计算单位为0.5天，不足0.5天以0.5天计算，超过0.5天不满1天以1天计算，以此类推。"
                },
                "file_name": {
                    "description": "source file name, only file name, not full path",
                    "type": "string",
                    "example": "员工考勤管理制度-2023.pdf"
                },
                "page_number": {
                    "description": "page number in the source file",
                    "type": "integer",
                    "example": 1
                },
                "qa_file_path": {
                    "description": "the qa file fullpath",
                    "type": "string",
                    "example": "dataset/dataset-playground/v1/qa.csv"
                },
                "qa_line_number": {
                    "description": "line number in the qa file",
                    "type": "integer",
                    "example": 7
                },
                "question": {
                    "description": "Question row",
                    "type": "string",
                    "example": "q: 旷工最小计算单位为多少天？"
                },
                "score": {
                    "description": "vector search score",
                    "type": "number",
                    "example": 0.34
                },
                "title": {
                    "description": "Title of the webpage",
                    "type": "string",
                    "example": "开始使用 Microsoft 帐户 – Microsoft"
                },
                "url": {
                    "description": "URL of the webpage",
                    "type": "string",
                    "example": "https://www.microsoft.com/zh-cn/welcome"
                }
            }
        },
        "service.Chunk": {
            "type": "object",
            "properties": {
                "etag": {
                    "type": "string"
                },
                "partNubmer": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "service.CompleteBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "bucketPath": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "uploadID": {
                    "type": "string"
                }
            }
        },
        "service.DelteFileBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "bucketPath": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.GenChunkURLBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "bucketPath": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "partNumber": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "uploadID": {
                    "type": "string"
                }
            }
        },
        "service.GenChunkURLResult": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service.NewMultipartBody": {
            "type": "object",
            "properties": {
                "bucket": {
                    "description": "The file is eventually stored in bucketPath/filtName in the bucket.",
                    "type": "string"
                },
                "bucketPath": {
                    "type": "string"
                },
                "chunkCount": {
                    "description": "How many pieces do we have to divide it into?",
                    "type": "integer"
                },
                "fileName": {
                    "type": "string"
                },
                "md5": {
                    "description": "file md5",
                    "type": "string"
                },
                "size": {
                    "description": "part size",
                    "type": "integer"
                }
            }
        },
        "service.SuccessChunksResult": {
            "type": "object",
            "properties": {
                "chunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Chunk"
                    }
                },
                "done": {
                    "type": "boolean"
                },
                "uploadID": {
                    "type": "string"
                }
            }
        },
        "storage.Conversation": {
            "type": "object",
            "properties": {
                "app_name": {
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "type": "string",
                    "example": "arcadia"
                },
                "id": {
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.Message"
                    }
                },
                "started_at": {
                    "type": "string",
                    "example": "2023-12-21T10:21:06.389359092+08:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-22T10:21:06.389359092+08:00"
                }
            }
        },
        "storage.Message": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "旷工最小计算单位为0.5天。"
                },
                "id": {
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                },
                "query": {
                    "type": "string",
                    "example": "旷工最小计算单位为多少天？"
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/retriever.Reference"
                    }
                }
            }
        }
    }
}