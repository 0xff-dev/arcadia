// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "chat with application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "chat with application",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Should the chat request be treated as debugging?",
                        "name": "debug",
                        "in": "query"
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.ChatReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "blocking mode, will return all field; streaming mode, only conversation_id, message and created_at will be returned",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatRespBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/conversations": {
            "post": {
                "description": "list all conversations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "list all conversations",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.APPMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/chat.Conversation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/conversations/:conversationID": {
            "delete": {
                "description": "delete one conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "delete one conversation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "conversationID",
                        "name": "conversationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.SimpleResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/messages": {
            "post": {
                "description": "get all messages history for one conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get all messages history for one conversation",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.ConversationReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.Conversation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/messages/:messageID/references": {
            "post": {
                "description": "get one message's references",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get one message references",
                "parameters": [
                    {
                        "type": "string",
                        "description": "messageID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.MessageReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/retriever.Reference"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chat.ErrorResp"
                        }
                    }
                }
            }
        },
        "/model/files/chunks": {
            "get": {
                "description": "Get success chunks of a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinioAPI"
                ],
                "summary": "Get success chunks of a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MD5 value of the file",
                        "name": "md5",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the file",
                        "name": "fileName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "namespace",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path of the bucket",
                        "name": "bucketPath",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ETag of the file",
                        "name": "etag",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SuccessChunksResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chat.APPMetadata": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "arcadia"
                }
            }
        },
        "chat.ChatReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace",
                "query",
                "response_mode"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "arcadia"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "query": {
                    "description": "Query user query string",
                    "type": "string",
                    "example": "旷工最小计算单位为多少天？"
                },
                "response_mode": {
                    "description": "ResponseMode:\n* Blocking - means the response is returned in a blocking manner\n* Streaming - means the response will use Server-Sent Events",
                    "allOf": [
                        {
                            "$ref": "#/definitions/chat.ResponseMode"
                        }
                    ],
                    "example": "blocking"
                }
            }
        },
        "chat.ChatRespBody": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "created_at": {
                    "description": "CreatedAt is the time when the message is created",
                    "type": "string",
                    "example": "2023-12-21T10:21:06.389359092+08:00"
                },
                "message": {
                    "description": "Message is what AI say",
                    "type": "string",
                    "example": "旷工最小计算单位为0.5天。"
                },
                "message_id": {
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                },
                "references": {
                    "description": "References is the list of references",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/retriever.Reference"
                    }
                }
            }
        },
        "chat.Conversation": {
            "type": "object",
            "properties": {
                "app_name": {
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "type": "string",
                    "example": "arcadia"
                },
                "id": {
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chat.Message"
                    }
                },
                "started_at": {
                    "type": "string",
                    "example": "2023-12-21T10:21:06.389359092+08:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-22T10:21:06.389359092+08:00"
                }
            }
        },
        "chat.ConversationReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "arcadia"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                }
            }
        },
        "chat.ErrorResp": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "conversation is not found"
                }
            }
        },
        "chat.Message": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "旷工最小计算单位为0.5天。"
                },
                "id": {
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                },
                "query": {
                    "type": "string",
                    "example": "旷工最小计算单位为多少天？"
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/retriever.Reference"
                    }
                }
            }
        },
        "chat.MessageReqBody": {
            "type": "object",
            "required": [
                "app_name",
                "app_namespace"
            ],
            "properties": {
                "app_name": {
                    "description": "AppName, the name of the application",
                    "type": "string",
                    "example": "chat-with-llm"
                },
                "app_namespace": {
                    "description": "AppNamespace, the namespace of the application",
                    "type": "string",
                    "example": "arcadia"
                },
                "conversation_id": {
                    "description": "ConversationID, if it is empty, a new conversation will be created",
                    "type": "string",
                    "example": "5a41f3ca-763b-41ec-91c3-4bbbb00736d0"
                },
                "message_id": {
                    "description": "MessageID, single message id",
                    "type": "string",
                    "example": "4f3546dd-5404-4bf8-a3bc-4fa3f9a7ba24"
                }
            }
        },
        "chat.ResponseMode": {
            "type": "string",
            "enum": [
                "blocking",
                "streaming"
            ],
            "x-enum-varnames": [
                "Blocking",
                "Streaming"
            ]
        },
        "chat.SimpleResp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "retriever.Reference": {
            "type": "object",
            "properties": {
                "answer": {
                    "description": "Answer row",
                    "type": "string",
                    "example": "旷工最小计算单位为 0.5 天。"
                },
                "file_path": {
                    "description": "file fullpath",
                    "type": "string",
                    "example": "dataset/dataset-playground/v1/qa.csv"
                },
                "line_number": {
                    "description": "line number in the file",
                    "type": "integer",
                    "example": 7
                },
                "question": {
                    "description": "Question row",
                    "type": "string",
                    "example": "q: 旷工最小计算单位为多少天？"
                },
                "score": {
                    "description": "vector search score",
                    "type": "number",
                    "example": 0.34
                }
            }
        },
        "service.Chunk": {
            "type": "object",
            "properties": {
                "etag": {
                    "type": "string"
                },
                "partNubmer": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "service.SuccessChunksResult": {
            "type": "object",
            "properties": {
                "chunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Chunk"
                    }
                },
                "done": {
                    "type": "boolean"
                },
                "uploadID": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
