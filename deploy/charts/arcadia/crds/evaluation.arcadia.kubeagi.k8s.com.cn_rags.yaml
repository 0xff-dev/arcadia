---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: rags.evaluation.arcadia.kubeagi.k8s.com.cn
spec:
  group: evaluation.arcadia.kubeagi.k8s.com.cn
  names:
    kind: RAG
    listKind: RAGList
    plural: rags
    singular: rag
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RAG is the Schema for the rags API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RAGSpec defines the desired state of RAG
            properties:
              application:
                description: Application(required) defines the target of this RAG
                  evaluation
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                  namespace:
                    description: Namespace is the namespace of resource being referenced
                    type: string
                required:
                - kind
                - name
                type: object
              creator:
                description: Creator defines datasource creator (AUTO-FILLED by webhook)
                type: string
              datasets:
                description: Datasets defines the dataset which will be used to generate
                  test datasets
                items:
                  description: Dataset stands for the files used to generate ragas
                    test dataset
                  properties:
                    files:
                      description: 'Files retrieved from Source and used in this testdataset
                        - For file with tag `object_type: QA`, will be used directly
                        - TODO: For file without special tags, will use `QAGenerationChain`
                        to generate QAs (Not Supported Yet)'
                      items:
                        type: string
                      type: array
                    source:
                      description: From defines the source which provides this QA
                        Files for test dataset Only `VersionedDataset` allowed
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                        namespace:
                          description: Namespace is the namespace of resource being
                            referenced
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                  type: object
                type: array
              description:
                description: Description defines datasource description
                type: string
              displayName:
                description: DisplayName defines datasource display name
                type: string
              judge_llm:
                description: JudgeLLM(required) defines the judge which is a LLM to
                  evaluate RAG application against test dataset
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                  namespace:
                    description: Namespace is the namespace of resource being referenced
                    type: string
                required:
                - kind
                - name
                type: object
              metrics:
                description: Metrics that this rag evaluation will do
                items:
                  properties:
                    kind:
                      description: Kind of this Metric
                      type: string
                    parameters:
                      description: Parameters in this Metrics
                      items:
                        description: Parameter to metrics which is a key-value pair
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    tolerance_threshold:
                      description: ToleranceThreshbold on this Metric If the evaluation
                        score is smaller than this tolerance threshold,we treat this
                        RAG solution as `Bad`
                      type: integer
                  type: object
                type: array
              report:
                description: Report defines the evaluation report configurations
                type: object
              serviceAccountName:
                default: default
                description: ServiceAccountName define the user when the job is run
                type: string
              storage:
                description: Storage storage must be provided and data needs to be
                  saved throughout the evaluation phase.
                properties:
                  accessModes:
                    description: 'accessModes contains the desired access modes the
                      volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                    items:
                      type: string
                    type: array
                  dataSource:
                    description: 'dataSource field can be used to specify either:
                      * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                      * An existing PVC (PersistentVolumeClaim) If the provisioner
                      or an external controller can support the specified data source,
                      it will create a new volume based on the contents of the specified
                      data source. If the AnyVolumeDataSource feature gate is enabled,
                      this field will always have the same contents as the DataSourceRef
                      field.'
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being
                          referenced. If APIGroup is not specified, the specified
                          Kind must be in the core API group. For any other third-party
                          types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  dataSourceRef:
                    description: 'dataSourceRef specifies the object from which to
                      populate the volume with data, if a non-empty volume is desired.
                      This may be any local object from a non-empty API group (non
                      core object) or a PersistentVolumeClaim object. When this field
                      is specified, volume binding will only succeed if the type of
                      the specified object matches some installed volume populator
                      or dynamic provisioner. This field will replace the functionality
                      of the DataSource field and as such if both fields are non-empty,
                      they must have the same value. For backwards compatibility,
                      both fields (DataSource and DataSourceRef) will be set to the
                      same value automatically if one of them is empty and the other
                      is non-empty. There are two important differences between DataSource
                      and DataSourceRef: * While DataSource only allows two specific
                      types of objects, DataSourceRef allows any non-core object,
                      as well as PersistentVolumeClaim objects. * While DataSource
                      ignores disallowed values (dropping them), DataSourceRef preserves
                      all values, and generates an error if a disallowed value is
                      specified. (Beta) Using this field requires the AnyVolumeDataSource
                      feature gate to be enabled.'
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being
                          referenced. If APIGroup is not specified, the specified
                          Kind must be in the core API group. For any other third-party
                          types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  resources:
                    description: 'resources represents the minimum resources the volume
                      should have. If RecoverVolumeExpansionFailure feature is enabled
                      users are allowed to specify resource requirements that are
                      lower than previous value but must still be higher than capacity
                      recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  selector:
                    description: selector is a label query over volumes to consider
                      for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  storageClassName:
                    description: 'storageClassName is the name of the StorageClass
                      required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                    type: string
                  volumeMode:
                    description: volumeMode defines what type of volume is required
                      by the claim. Value of Filesystem is implied when not included
                      in claim spec.
                    type: string
                  volumeName:
                    description: volumeName is the binding reference to the PersistentVolume
                      backing this claim.
                    type: string
                type: object
              suspend:
                default: false
                description: Suspend suspension of the evaluation process
                type: boolean
            required:
            - application
            - datasets
            - judge_llm
            - metrics
            - storage
            type: object
          status:
            description: RAGStatus defines the observed state of RAG
            properties:
              completionTime:
                description: CompletionTime Evaluation completion time
                format: date-time
                type: string
              conditions:
                description: Conditions show the status of the job in the current
                  stage
                items:
                  description: JobCondition describes current state of a job.
                  properties:
                    lastProbeTime:
                      description: Last time the condition was checked.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of job condition, Complete or Failed.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: Phase evaluation current stage, init,download,generate,judge,upload,complete
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
