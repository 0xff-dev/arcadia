package impl

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	"github.com/kubeagi/arcadia/graphql-server/go-server/graph/generated"
	"github.com/kubeagi/arcadia/graphql-server/go-server/pkg/dataprocessing"
)

// AllDataProcessListByPage is the resolver for the allDataProcessListByPage field.
func (r *dataProcessQueryResolver) AllDataProcessListByPage(ctx context.Context, obj *generated.DataProcessQuery, input *generated.AllDataProcessListByPageInput) (*generated.PaginatedDataProcessItem, error) {
	return dataprocessing.ListDataprocessing(ctx, obj, input)
}

// DataProcess is the resolver for the dataProcess field.
func (r *mutationResolver) DataProcess(ctx context.Context) (*generated.DataProcessMutation, error) {
	panic(fmt.Errorf("not implemented: DataProcess - dataProcess"))
}

// DataProcess is the resolver for the dataProcess field.
func (r *queryResolver) DataProcess(ctx context.Context) (*generated.DataProcessQuery, error) {
	panic(fmt.Errorf("not implemented: DataProcess - dataProcess"))
}

// DataProcessQuery returns generated.DataProcessQueryResolver implementation.
func (r *Resolver) DataProcessQuery() generated.DataProcessQueryResolver {
	return &dataProcessQueryResolver{r}
}

type dataProcessQueryResolver struct{ *Resolver }
